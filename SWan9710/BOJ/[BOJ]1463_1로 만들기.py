X = int(input())
dp = [0] * (X+1)
for i in range(2, X+1):
    dp[i] = dp[i-1] + 1
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i//2]+1)
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i//3]+1)
print(dp[X])
'''
1. X에 수 입력받기
2. DP 배열 생성 후 0으로 초기화 해주는데 0은 안쓸거니 X+1 까지 생성
DP 배열에 들어간 수는 해당 수가 1이 되는데 걸리는 최소한의 연산횟수
그러기 위해 for문 이용해 2부터 dp의 i번째 자리에 채워줌
dp[2] = dp[1] + 1 ==> dp[1] = 0 + 1 해서 1
dp[3] = dp[2] + 1 ==> dp[2] = 1 + 1 해서 2
이런식으로 dp[2] 부터 X+1 까지 오름차순으로 숫자 채워줌

3. i가 2로 나누어 떨어질 때
현재값과 나누어 떨어진 값중 더 작은 값을 dp[i]  번째에 저장
4. i가 3으로 나누어 떨어질 때
마찬가지

dp[x] 에 들어가는 값 x-1 에 +1 한 값 에서 i가 2나 3으로 나누어 떨어지는 경우
해당 조건문에 걸려 최솟값이 저장됨
앞에서 최솟값만이 dp에 저장되었기 때문에 dp[x]에 들어가는 값도 최솟값으로 저장됨
'''