'''
N * N 종이가 주어짐
하얀색은 0
파란색은 1
N = 2,4,6,8,16,32,64,128 중 하나로 주어짐
색마다 잘라서 하얀색은 몇개고
파란색은 몇개인지 출력하기

8
1 1 0 0 \0 0 1 1
1 1 0 0 \0 0 1 1
0 0 0 0 \1 1 0 0
0 0 0 0 \1 1 0 0
--------\---------
1 0 0 0 \1 1 1 1
0 1 0 0 \1 1 1 1
0 0 1 1 \1 1 1 1
0 0 1 1 \1 1 1 1
종이를 이렇게 잘라야 하잖아
0,0 에서 시작해서 전체탐색하는데
종이가 시작위치의 색이 전체 탐색했을때 색이 같아야 해
색이 다르면 전체를 십자로 짤라서 다시 시작해야함
그럼 함수의 시작위치가 4개가 필요
위 그림에서 N = 8
1. 첫번째 함수는 0,0,8    >> 이게 전체
2. 두번째 함수는 0, 0+4, 4 >> 0,4 시작에서 전체 탐색범위는 가로세로 4칸씩
3. 세번째 함수는 4,0,4    >> 마찬가지로 4,0 에서 시작해서 전체 탐색범위는 가로세로 4칸
4. 네번째 함수 4,4,4     >> 4,4 에서 시작해서 전체 탐색범위는 4칸

>> 재귀로 돌면서 그 안에서도 십자로 짤라서 탐색함
마찬가지로 시작위치는 전체의 절반에 해당 그럼 4에 해당하는게 길이를 절반으로 나누기
위 식의 1,2,3,4 를 일반화 해주기
'''

def cut(x,y,N):
    global white, blue
    for i in range(x, x+N):
        for j in range(y, y+N):
            # 시작 위치하고 전체탐색하는 곳의 색이 다를때
            if board[x][y] != board[i][j]:
                # 십자로 짜르기
                cut(x, y, N//2)
                cut(x, y+N//2, N // 2)
                cut(x+N//2, y, N // 2)
                cut(x+N//2, y+N//2, N//2)
                return
    # 하얀색의 갯수 세기
    if board[x][y] == 0:
        white += 1
    else:
        blue += 1

N = int(input())
board = [list(map(int, input().split())) for _ in range(N)]
white = 0
blue = 0
cut(0,0,N)
print(white)
print(blue)

